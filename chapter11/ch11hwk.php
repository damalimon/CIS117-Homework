Chapter 11 Review and Pursue (p.366)  (BKW)
		(5 points) What function is used to send email? 

		What are the function’s arguments? 

		What does the server need in order to send email? 

You can send an email either with an html form and a php post command.
The script is 

	mail (to, subject, body, [headers]);
	
	$body = 'Name: {_POST['name']}/n/
		nComments: {__POST['comments']}";
	$body = wordwrap($body, 70);
	
The email's body will start with the prompt Name;
followed by the name entered into the form. 
		
		This next few lines prints a message and sends the email:
		
			mail('your_email@example.com',
			      'Contact Form Submission',
			      $body, "From: {$_POST['email']}");
			    echo '<p><em>Thank you for contacting me. I will reply
			    some day.</em></p>';
			    
If you are running php on your local computer with a local server, then 
you will need to set the configuration (php.ini) file to a smtp server. 
If your internet service provider requires authentication (user name and pw)
then this way won't work. 

In that case you have to install an SMTP server on your computer. 
For windows, google free windows smtp server. Ullman recommmends XAMPP which includes the Mercury 
mail server.

For Macs, it's possible to enable the built-in SMTP server (sendmail or postfix, check
your OSX version). Search online for sending email with MAMP.

Hosting - 
It is much easier to send email via a PHP script on a hosted site.  They set it up or 
help set it up for you.




			(5 points) What debugging steps can you take if you aren’t 
			receiving any email that should be sent from a PHP script. 
You can look at the html and be sure that nothing is wrong there but then you should look
at the php. The php is probably/ possibly the problem. 
		The first step toward fixing any kind of problem is understanding what’s causing it. 
		Remember the role each technology—HTML, PHP, SQL, and MySQL—plays as you debug. 
		If your page doesn’t look right, that’s an HTML problem. If your HTML is dynamically 
		generated by PHP, it’s still an HTML problem, but you’ll need to work with the PHP 
		code to make it right.

		Debug script
		
		// Check for an error:
if ($_FILES['upload']['error'] > 0) {
echo '<p class="error">The file could not be uploaded because: <strong>';
// Print a message based upon the error.
switch ($_FILES['upload']['error']) {
case 1:
print 'The file exceeds the upload_max_filesize setting in php.ini.';
break;
case 2:
print 'The file exceeds the MAX_FILE_SIZE setting in the HTML form.';
break;
case 3:
print 'The file was only partially uploaded.'; break;
case 4:
print 'No file was uploaded.'; break;
case 6:
print 'No temporary folder was available.';
break;
case 7:
print 'Unable to write to the disk.';
break;
case 8:
print 'File upload stopped.'; break;

print 'A system error occurred.';
break;
} // End of switch.
print '</strong></p>'; } // End of error IF.
// Delete the file if it still exists: if (file_exists 
($_FILES['upload'] ['tmp_name']) && is_file($_FILES ['upload']['tmp_name']) ) {
unlink ($_FILES['upload'] ['tmp_name']);
}
} // End of the submitted conditional. ?>
<form enctype="multipart/form-data"
action="upload_image.php" method="post">


<input type="hidden" name="MAX_FILE_ SIZE" value="524288" />
<fieldset><legend>Select a JPEG or PNG image of 512KB or smaller to be uploaded:</legend>
<p><b>File:</b> <input type="file" name="upload" /></p>
</fieldset>
<div align="center"><input type="submit" name="submit" value="Submit" /></div>
</form> </body> </html>


In the above script, 
a switch prints a more detailed error..


(5 points) In what ways are PHP and JavaScript alike? How are they different? 
			PHP has commands that closely resemble JavaScript. 
			You must use a semi colon at the end of each line/ command
			JavaScript is case sensitive but PHP is not.
					
	
(15 points) Create a more custom contact form. 

Have the PHP script also send a 
more custom email, including any other data requested by the form. 
he most significant difference between the 
two languages is that JavaScript is primarily client-side and PHP is primarily server-side.
Java Script can do some things PHP can not, but- 
PHP can generate JavaScript code. 

			<!DOCTYPE html>

<head>
<meta charset=utf-8" /> 

<title>Contact BW Design Services</title>
</head>

<body>

<h1>Contact BW Design Services</h1>
if ($_SERVER['REQUEST_METHOD'] == ➝'POST') {
if (!empty($_POST['name'])
➝ && !empty($_POST['email']) && ➝!empty($_POST['comments']) ) {
$body = "Name: {$_POST['name']}\n\ ➝ nComments: 
{$_POST['comments']}"; $body = wordwrap($body, 70);

	mail('your_email@example.com', ➝'Contact Form Submission', ➝$body, 
	"From: {$_POST['email']}"); echo '<p><em>Thank you for
➝ contacting us! One of our team members will reply to you 
as soon as possible.</em></p>';

$_POST = array();

} else {
echo '<p style="font-weight: ➝ bold; color: #C00">Please ➝ fill out the form
➝ completely.</p>';
}
} // End of main isset() IF.

<p>Please fill out this form to ➝ contact BW Design Services. Please tell us
the reason, in detail, for contacting us.</p>

//this assumes the html and php were separate

<form action="email.php"
➝ method="post">
<p>Name: <input type="text"
➝ name="name" size="30"
➝ maxlength="60" value="<?php ➝if (isset($_POST['name'])) echo ➝$_POST['name']; ?>" /></p>
 <p>Email Address: <input
➝ type="text" name="email"
➝ size="30" maxlength="80"
➝ value="<?php if (isset($_POST ➝['email'])) echo $_POST ➝['email']; ?>" /></p>

<p>Comments: <textarea name= ➝"comments" rows="5" cols="30"> ➝ 

<?php if (isset($_POST ➝['comments'])) echo $_POST ➝['comments']; ?>
</textarea></p> <p><input type="submit" name= ➝"submit" value="Send!" /></p>
</form>

</body> </html>